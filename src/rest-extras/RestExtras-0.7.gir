<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Rest" version="0.7"/>
  <include name="libxml2" version="2.0"/>
  <package name="rest-extras-0.7"/>
  <c:include name="rest/flickr-proxy-call.h"/>
  <c:include name="rest/flickr-proxy.h"/>
  <c:include name="rest/lastfm-proxy-call.h"/>
  <c:include name="rest/lastfm-proxy.h"/>
  <c:include name="rest/youtube-proxy.h"/>
  <namespace name="RestExtras"
             version="0.7"
             shared-library="librest-extras-0.7.so.0"
             c:identifier-prefixes=""
             c:symbol-prefixes="">
    <class name="FlickrProxy"
           c:symbol-prefix="flickr_proxy"
           c:type="FlickrProxy"
           parent="Rest.Proxy"
           glib:type-name="FlickrProxy"
           glib:get-type="flickr_proxy_get_type"
           glib:type-struct="FlickrProxyClass">
      <doc xml:space="preserve">#FlickrProxy has no publicly available members.</doc>
      <constructor name="new" c:identifier="flickr_proxy_new">
        <return-value transfer-ownership="full">
          <type name="Rest.Proxy" c:type="RestProxy*"/>
        </return-value>
        <parameters>
          <parameter name="api_key" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="shared_secret" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_token"
                   c:identifier="flickr_proxy_new_with_token">
        <return-value transfer-ownership="full">
          <type name="Rest.Proxy" c:type="RestProxy*"/>
        </return-value>
        <parameters>
          <parameter name="api_key" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="shared_secret" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="token" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="is_successful"
                c:identifier="flickr_proxy_is_successful"
                throws="1">
        <doc xml:space="preserve">Examines the Flickr response and if it not a successful reply, set @error and
return FALSE.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE if this response is successful, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="root" transfer-ownership="none">
            <doc xml:space="preserve">The root node of a parsed Flickr response</doc>
            <type name="Rest.XmlNode" c:type="RestXmlNode*"/>
          </parameter>
        </parameters>
      </function>
      <method name="build_login_url"
              c:identifier="flickr_proxy_build_login_url">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <type name="FlickrProxy" c:type="FlickrProxy*"/>
          </instance-parameter>
          <parameter name="frob" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="perms" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_api_key" c:identifier="flickr_proxy_get_api_key">
        <doc xml:space="preserve">Get the API key.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the API key. This string is owned by #FlickrProxy and should not be
freed.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve">an #FlickrProxy</doc>
            <type name="FlickrProxy" c:type="FlickrProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_shared_secret"
              c:identifier="flickr_proxy_get_shared_secret">
        <doc xml:space="preserve">Get the shared secret for authentication.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the shared secret. This string is owned by #FlickrProxy and should not be
freed.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve">an #FlickrProxy</doc>
            <type name="FlickrProxy" c:type="FlickrProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_token" c:identifier="flickr_proxy_get_token">
        <doc xml:space="preserve">Get the current token.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the token, or %NULL if there is no token yet.  This string is owned
by #FlickrProxy and should not be freed.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve">an #FlickrProxy</doc>
            <type name="FlickrProxy" c:type="FlickrProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_upload" c:identifier="flickr_proxy_new_upload">
        <doc xml:space="preserve">Create a new #RestProxyCall that can be used for uploading.

See http://www.flickr.com/services/api/upload.api.html for details on
uploading to Flickr.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #FlickrProxyCall</doc>
          <type name="FlickrProxyCall" c:type="RestProxyCall*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve">a valid #FlickrProxy</doc>
            <type name="FlickrProxy" c:type="FlickrProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_upload_for_file"
              c:identifier="flickr_proxy_new_upload_for_file"
              throws="1">
        <doc xml:space="preserve">Create a new #RestProxyCall that can be used for uploading.  @filename will
be set as the "photo" parameter for you, avoiding you from having to open the
file and determine the MIME type.

Note that this function can in theory block.

See http://www.flickr.com/services/api/upload.api.html for details on
uploading to Flickr.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #FlickrProxyCall</doc>
          <type name="FlickrProxyCall" c:type="RestProxyCall*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve">a valid #FlickrProxy</doc>
            <type name="FlickrProxy" c:type="FlickrProxy*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve">the file to upload</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_token" c:identifier="flickr_proxy_set_token">
        <doc xml:space="preserve">Set the token.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve">an #FlickrProxy</doc>
            <type name="FlickrProxy" c:type="FlickrProxy*"/>
          </instance-parameter>
          <parameter name="token" transfer-ownership="none">
            <doc xml:space="preserve">the access token</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sign" c:identifier="flickr_proxy_sign">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <type name="FlickrProxy" c:type="FlickrProxy*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <property name="api-key"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="shared-secret"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="token" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Rest.Proxy" c:type="RestProxy"/>
      </field>
      <field name="priv">
        <type name="FlickrProxyPrivate" c:type="FlickrProxyPrivate*"/>
      </field>
    </class>
    <class name="FlickrProxyCall"
           c:symbol-prefix="flickr_proxy_call"
           c:type="FlickrProxyCall"
           parent="Rest.ProxyCall"
           glib:type-name="FlickrProxyCall"
           glib:get-type="flickr_proxy_call_get_type"
           glib:type-struct="FlickrProxyCallClass">
      <doc xml:space="preserve">#FlickrProxyCall has no publicly available members.</doc>
      <property name="upload"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Set if the call should be sent to the photo upload endpoint and not the
general-purpose endpoint.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="Rest.ProxyCall" c:type="RestProxyCall"/>
      </field>
    </class>
    <record name="FlickrProxyCallClass"
            c:type="FlickrProxyCallClass"
            glib:is-gtype-struct-for="FlickrProxyCall">
      <field name="parent_class">
        <type name="Rest.ProxyCallClass" c:type="RestProxyCallClass"/>
      </field>
      <field name="_padding_dummy" readable="0" private="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="FlickrProxyClass"
            c:type="FlickrProxyClass"
            glib:is-gtype-struct-for="FlickrProxy">
      <field name="parent_class">
        <type name="Rest.ProxyClass" c:type="RestProxyClass"/>
      </field>
      <field name="_padding_dummy" readable="0" private="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="FlickrProxyPrivate"
            c:type="FlickrProxyPrivate"
            disguised="1">
    </record>
    <class name="LastfmProxy"
           c:symbol-prefix="lastfm_proxy"
           c:type="LastfmProxy"
           parent="Rest.Proxy"
           glib:type-name="LastfmProxy"
           glib:get-type="lastfm_proxy_get_type"
           glib:type-struct="LastfmProxyClass">
      <doc xml:space="preserve">#LastfmProxy has no publicly available members.</doc>
      <constructor name="new" c:identifier="lastfm_proxy_new">
        <return-value transfer-ownership="full">
          <type name="Rest.Proxy" c:type="RestProxy*"/>
        </return-value>
        <parameters>
          <parameter name="api_key" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="secret" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_session"
                   c:identifier="lastfm_proxy_new_with_session">
        <return-value transfer-ownership="full">
          <type name="Rest.Proxy" c:type="RestProxy*"/>
        </return-value>
        <parameters>
          <parameter name="api_key" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="secret" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="session_key" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="is_successful"
                c:identifier="lastfm_proxy_is_successful"
                throws="1">
        <doc xml:space="preserve">Examines the Lastfm response and if it not a successful reply, set @error and
return FALSE.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE if this response is successful, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="root" transfer-ownership="none">
            <doc xml:space="preserve">The root node of a parsed Lastfm response</doc>
            <type name="Rest.XmlNode" c:type="RestXmlNode*"/>
          </parameter>
        </parameters>
      </function>
      <method name="build_login_url"
              c:identifier="lastfm_proxy_build_login_url">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <type name="LastfmProxy" c:type="LastfmProxy*"/>
          </instance-parameter>
          <parameter name="token" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_api_key" c:identifier="lastfm_proxy_get_api_key">
        <doc xml:space="preserve">Get the API key.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the API key. This string is owned by #LastfmProxy and should not be
freed.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve">an #LastfmProxy</doc>
            <type name="LastfmProxy" c:type="LastfmProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_secret" c:identifier="lastfm_proxy_get_secret">
        <doc xml:space="preserve">Get the secret for authentication.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the secret. This string is owned by #LastfmProxy and should not be
freed.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve">an #LastfmProxy</doc>
            <type name="LastfmProxy" c:type="LastfmProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_session_key"
              c:identifier="lastfm_proxy_get_session_key">
        <doc xml:space="preserve">Get the current session key.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the session key, or %NULL if there is no session key yet.  This string is owned
by #LastfmProxy and should not be freed.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve">an #LastfmProxy</doc>
            <type name="LastfmProxy" c:type="LastfmProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_session_key"
              c:identifier="lastfm_proxy_set_session_key">
        <doc xml:space="preserve">Set the session key.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve">an #LastfmProxy</doc>
            <type name="LastfmProxy" c:type="LastfmProxy*"/>
          </instance-parameter>
          <parameter name="session_key" transfer-ownership="none">
            <doc xml:space="preserve">the access session_key</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sign" c:identifier="lastfm_proxy_sign">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <type name="LastfmProxy" c:type="LastfmProxy*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <property name="api-key"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="secret"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="session-key" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Rest.Proxy" c:type="RestProxy"/>
      </field>
      <field name="priv">
        <type name="LastfmProxyPrivate" c:type="LastfmProxyPrivate*"/>
      </field>
    </class>
    <class name="LastfmProxyCall"
           c:symbol-prefix="lastfm_proxy_call"
           c:type="LastfmProxyCall"
           parent="Rest.ProxyCall"
           glib:type-name="LastfmProxyCall"
           glib:get-type="lastfm_proxy_call_get_type"
           glib:type-struct="LastfmProxyCallClass">
      <doc xml:space="preserve">#LastfmProxyCall has no publicly available members.</doc>
      <field name="parent">
        <type name="Rest.ProxyCall" c:type="RestProxyCall"/>
      </field>
    </class>
    <record name="LastfmProxyCallClass"
            c:type="LastfmProxyCallClass"
            glib:is-gtype-struct-for="LastfmProxyCall">
      <field name="parent_class">
        <type name="Rest.ProxyCallClass" c:type="RestProxyCallClass"/>
      </field>
      <field name="_padding_dummy" readable="0" private="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="LastfmProxyClass"
            c:type="LastfmProxyClass"
            glib:is-gtype-struct-for="LastfmProxy">
      <field name="parent_class">
        <type name="Rest.ProxyClass" c:type="RestProxyClass"/>
      </field>
      <field name="_padding_dummy" readable="0" private="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="LastfmProxyPrivate"
            c:type="LastfmProxyPrivate"
            disguised="1">
    </record>
    <class name="YoutubeProxy"
           c:symbol-prefix="youtube_proxy"
           c:type="YoutubeProxy"
           parent="Rest.Proxy"
           glib:type-name="YoutubeProxy"
           glib:get-type="youtube_proxy_get_type"
           glib:type-struct="YoutubeProxyClass">
      <doc xml:space="preserve">#YoutubeProxy has no publicly available members.</doc>
      <constructor name="new" c:identifier="youtube_proxy_new">
        <return-value transfer-ownership="full">
          <type name="Rest.Proxy" c:type="RestProxy*"/>
        </return-value>
        <parameters>
          <parameter name="developer_key" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_auth"
                   c:identifier="youtube_proxy_new_with_auth">
        <return-value transfer-ownership="full">
          <type name="Rest.Proxy" c:type="RestProxy*"/>
        </return-value>
        <parameters>
          <parameter name="developer_key" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_auth" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_user_auth" c:identifier="youtube_proxy_set_user_auth">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <type name="YoutubeProxy" c:type="YoutubeProxy*"/>
          </instance-parameter>
          <parameter name="user_auth" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_async"
              c:identifier="youtube_proxy_upload_async"
              throws="1">
        <doc xml:space="preserve">Upload a file.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE, or %FALSE if the file could not be opened</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve">a #YoutubeProxy</doc>
            <type name="YoutubeProxy" c:type="YoutubeProxy*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve">filename</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="fields" transfer-ownership="none">
            <doc xml:space="preserve">fields</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="incomplete" transfer-ownership="none">
            <doc xml:space="preserve">incomplete</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve">callback to invoke upon completion</doc>
            <type name="YoutubeProxyUploadCallback"
                  c:type="YoutubeProxyUploadCallback"/>
          </parameter>
          <parameter name="weak_object" transfer-ownership="none">
            <doc xml:space="preserve">an object instance used to tie the life cycle of the proxy to</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:space="preserve">user data to pass to the callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <property name="developer-key"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="user-auth" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Rest.Proxy" c:type="RestProxy"/>
      </field>
      <field name="priv">
        <type name="YoutubeProxyPrivate" c:type="YoutubeProxyPrivate*"/>
      </field>
    </class>
    <record name="YoutubeProxyClass"
            c:type="YoutubeProxyClass"
            glib:is-gtype-struct-for="YoutubeProxy">
      <field name="parent_class">
        <type name="Rest.ProxyClass" c:type="RestProxyClass"/>
      </field>
      <field name="_padding_dummy" readable="0" private="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="YoutubeProxyPrivate"
            c:type="YoutubeProxyPrivate"
            disguised="1">
    </record>
    <callback name="YoutubeProxyUploadCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="proxy" transfer-ownership="none">
          <type name="YoutubeProxy" c:type="YoutubeProxy*"/>
        </parameter>
        <parameter name="payload" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="total" transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="uploaded" transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="const GError*"/>
        </parameter>
        <parameter name="weak_object" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
  </namespace>
</repository>
